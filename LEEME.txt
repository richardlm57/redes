Miniproyecto 1.

Autores:
Richard Lares. 11-10508.
Patricia Reinoso. 11-10851.


Lares_Reinoso_Sockets.tar.gz

Está compuesto por los archivos: 

makefile: Ejecuta los comandos necesarios para compilar los archivos 
fuente y generar los ejecutables para el servidor y cliente.

reserva_bol_ser.c: Contiene la implementación del servidor del sistema
de reserva de boletos, el cual reservará asientos dependiendo de las
solicitudes de los clientes usando sockets.

reserva_bol_ser.h: Contiene las librerías que el servidor debe importar
para ofrecer el servicio.

reserva_bol_cli.c: Contiene la implementación del cliente del sistema
de reserva de boletos, el cual solicitará al servidor un asiento indicando
la fila y la columna del mismo usando sockets.

reserva_bol_cli.h: Contiene las librerías necesarias para que el cliente
pueda realizar peticiones al servidor.

Se ejecuta:

Para compilar los archivos:

$> make

En caso de limpiar los .o (opcional):

$> make clean

Para ejecutar el servidor:

$> ./reserva_bol_ser -f <num_1-10> -c <num_1-4> -p <puerto_servicio> &

Para ejecutar el cliente:

$> ./reserva_bol_cli <dir_IP_servidor> -p <puerto_servicio> -f <fila_asiento> -c <columna_asiento> 

Donde <puerto_servicio> es el puerto que será usado para el servicio, <dir_IP_servidor> es la dirección IP
del servidor, <fila_asiento> es la fila del asiento que se desea reserva (entre 1 y 10) y <columna_asiento>
es la columna del asiento que se desea reservar (entre 1 y 4).

************************************************************************************************************

Lares_Reinoso_RPC.tar.gz

Está compuesto por los archivos: 

Makefile.reserva_bool : contiene los archivos comandos necesarios compilar los 
archivo necesarios para su ejecución.

reserva_bool_client.c : implementacion de código para el cliente, especifica
cuándo se hacen las llamadas al servidor.

reserva_bool_clnt.c : stub de comunicaciones del lado del cliente.

reserva_bool.h : contiene declaraciones de constantes y tipos, y los encabezados de 
las funciones.

reserva_bool_server.c : implementación de las funciones que se ejecutan en el
servidor.

reserva_bool_svc.c : stub de comunicaciones del lado del servidor.

reserva_bool.x : especificación de las funciones del servidor, que luego al
compilarlo con RPCGEN, generará los archivos para el cliente y el servidor.

reserva_bool_xdr.c : rutinas XDR para codificar los argumentos.

Para su ejecución:

Primero se deben compilar los archivos, para ello se ejecuta:

$> make -f Makefile.reserva_bool

Para su ejecución es necesario el demonio "portmapper/rpcbind", en caso
de no tenerlo instalado, ejecutar la orden:

$> apt-get install portmap

Luego se debe activar el demonio en background como superusuario:

$> sudo rpcbind &

En modo privilegiado y en background se ejecuta el código del servicio remoto.

$> sudo ./reserva_bool_server &

Con esto, ya el servido remoto debe estar listo para su uso, si se quiere comprobar,
se puede ejecutar "echo $?"y se debería obtener un "0"como respuesta.

Ahora solo queda ejecutar el cliente:

$> sudo ./reserva_bool_client <dir_ip_servidor> -f <número de fila> -c <número de columna>

Donde dir_ip_servidor es la dirección IP del servidor y el valor de número de fila 
debe ser un entero entre 1 y 10 (ambos incluidos), y número de columna debe ser 
un entero entre 1 y 4 (ambos incluidos).

En necesario destacar que al momento de crear la versión 3 del archivo reserva_bool.x,
se incluyó una función, que al final, no resultó necesaria. Por lo que la misma se
encuentra dentro de comentarios dentro de varias partes del código, se intentó elminar
por completo pero generaba muchos errores. 